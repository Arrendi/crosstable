library(devtools)
load_all(".")
freq
freq.data.frame(esoph[, c("alcgp", "agegp")])
unclass(freq.data.frame(esoph[, c("alcgp", "agegp")]))
q("no")
library(devtools)
args(build)
build(binary=T)
q("no")
args(print)
cross(cbind(...) ~ agegp, data = esoph, test = T)
library(biostat2)
cross(cbind(...) ~ agegp, data = esoph, test = T)
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
res
res
load_all()
library(devtools)
load_all()
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
q("no")
library(devtools)
load_all()
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
class(x)
load_all()
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
)
load_all()
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
x
x
library(pander)
pander(x)
install.packages("pander")
library(pander)
pander(x)
knitr::kable(x)
x
unclass(x)
x
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
as.data.frame(x)
fun(x)
length(esoph)
is.list(x)
is.data.frame(x)
x
x
x = cross(... ~ agegp, data = esoph, test = T)
x
load_all()
x = cross(... ~ agegp, data = esoph, test = T)
load_all()
load_all()
x = cross(... ~ agegp, data = esoph, test = T)
q("no")
library(devtools);load_all()
x = cross(... ~ agegp, data = esoph, test = T)
x
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
x
unclass(x)
as.data.frame(x)
x
is.list(x)
unclass(x)
data.frame(unclass(x))
data.frame(x)
library(devtools);load_all()
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
class(x)
x = cross(... ~ agegp, data = esoph, test = T)
x
class(x)
class(x[[1]])
check()
q("no")
q("no")
library(devtools)
document()
check()
check()
rename
x
load_all()
x = cross(... ~ agegp, data = esoph, test = T)
x
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
x
names(x)
names(x)[1] <- "modalité"
x
load_all()
x = cross(cbind(...) ~ agegp, data = esoph, test = T)
names(x)[1] <- "modalité"
x
names(x)[1] <- "Variable"
x
build()
build(binary = T)
install_local("../biostat2_0.1.zip")
q("no")
library(devtools)
build()
build(binary = TRUE)
q("no")
load_all()
library(devtools)
load_all()
library(survival)
cross(Surv(time, status) ~ x, data = aml, total= T, test = T)
q("no")
library(devtools)
build()
build(binary = T)
install.packages("../biostat2_0.2.zip")
q("no")
