body_add_crosstable(compact(crosstable))
}
cross(cbind(...) ~ Species, iris, test = TRUE)
crosstable
doc <- read_docx()
#test with compact=F et compact=T
for (i in names(crosstables)) {
print(i)
crosstable = crosstables[[i]]
doc = doc%>%
body_add_crosstable(crosstable) %>%
body_add_break %>%
body_add_crosstable(crosstable, TRUE) %>%
body_add_break %>%
body_add_crosstable(compact(crosstable))
}
crosstables
crosstable
i
doc%>%
body_add_crosstable(crosstable)
crosstable = cross(cbind(...) ~ factor(am), mtcars, test = TRUE)
labs.col <- attr(crosstable, "labs.col")
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(!show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
is(rtn, "compacted")
compact
compact = FALSE
rtn %>%
select(-!!sym(id)) %>%
flextable
rtn
crosstable = cross(cbind(...) ~ factor(am), mtcars, test = TRUE)
# crosstable = cross(cbind(...) ~ Species, iris, test = TRUE)
# crosstable = cross(cbind(...) ~ Species, iris, test = F)
# crosstable = cross(cbind(...) ~ ., iris)
labs.col <- attr(crosstable, "labs.col")
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(!show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
is(rtn, "compacted")
rtn %>%
select(-!!sym(id)) %>%
flextable
is_multiple
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable
if(is_multiple){
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(rtn)-4, 1) else c(1, 1, ncol(rtn)-3)
rtn <- rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(rtn)-1), part = "head") %>%
merge_v(j = c("label", p)) %>%
border_inner_h(border = border1)
}
rtn
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable
if(is_multiple){
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
rtn <- rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(rtn)-1), part = "head") %>%
merge_v(j = c("label", p)) %>%
border_inner_h(border = border1)
}
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable
if(is_multiple){
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
rtn <- rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head") %>%
merge_v(j = c("label", p)) %>%
border_inner_h(border = border1)
}
rtn
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head") %>%
border_inner_h(border = border2, part = "head")
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
print(doc, "test_that.docx")
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
mtcars
iris
esoph
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
crosstables$simple_test
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
crosstable
crosstables
i
doc <- read_docx()
#test with compact=F et compact=T
for (i in names(crosstables)) {
print(i)
crosstable = crosstables[[i]]
doc = doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F) %>%
body_add_break
}
print(doc, "test_cross_officer.docx")
i
crosstable
crosstables$triple_no_test
crosstables[[i]]
doc <- read_docx()
#test with compact=F et compact=T
for (i in names(crosstables)) {
print(i)
ct = crosstables[[i]]
doc = doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(ct, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(ct, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(ct), show.test.name = F) %>%
body_add_break
}
print(doc, "test_cross_officer.docx")
warnings()
ct
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
print(i)
doc
print(doc, "test_cross_officer.docx")
crosstable
body_add_crosstable
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
body_add_crosstable
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
#test with compact=F et compact=T
for (i in names(crosstables)) {
print(i)
crosstable = crosstables[[i]]
doc = doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F) %>%
body_add_break
}
doc <- read_docx()
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2)
crosstable
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F)
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
crosstable
i
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
i
i="double_test"
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
i
i=NULL
p
jj
i
rm(i)
i
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
i
doc <- read_docx()
#test with compact=F et compact=T
for (i in names(crosstables)) {
print(i)
crosstable = crosstables[[i]]
doc = doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F) %>%
body_add_break
}
print(doc, "test_cross_officer.docx")
i
crosstable
oc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F)
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F)
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F)
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F)
compact(crosstable) %>% class
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F)
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F)
crosstable
crosstable = cross(cbind(...) ~ factor(am), mtcars, test = TRUE)
labs.col <- attr(crosstable, "labs.col")
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(is_tested && !show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
crosstable = cross(cbind(...) ~ factor(am), mtcars, test = TRUE) %>% compact
labs.col <- attr(crosstable, "labs.col")
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(is_tested && !show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
is_tested
is_multiple
crosstable
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
crosstable
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_crosstable(compact(crosstable), show.test.name = F)
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
doc <- read_docx()
#test with compact=F et compact=T
for (i in names(crosstables)) {
print(i)
crosstable = crosstables[[i]]
doc = doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted before function", 2) %>%
body_add_normal("TODO") %>%
# body_add_crosstable(compact(crosstable), show.test.name = F) %>%
body_add_break
}
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F) %>%
body_add_break %>%
body_add_title("Compacted in function", 2) %>%
body_add_crosstable(crosstable, TRUE, show.test.name = F)
doc %>%
body_add_title(i, 1) %>%
body_add_title("Not compacted", 2) %>%
body_add_crosstable(crosstable, show.test.name = F)
crosstable = cross(cbind(mpg,cyl,disp) ~ factor(am), mtcars, test = F)
attr(crosstable, "labs.col")
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(is_tested && !show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
labs.col <- attr(crosstable, "labs.col")
is_tested
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable
if(is_multiple){
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
rtn <- rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head") %>%
merge_v(j = c("label", p)) %>%
border_inner_h(border = border1)
}
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head")
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
body_merge = if(is_tested) c("label", p) else c("label")
rtn <- rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head") %>%
merge_v(j = ) %>%
border_inner_h(border = border1)
rtn
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(is_tested && !show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
rtn %>%
select(-!!sym(id)) %>%
flextable
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable
rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head") %>%
merge_v(j = )
rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths)
rtn
sep.rows <- which(rtn$label != lead(rtn$label))
sep.rows
rtn$label
labs.col <- attr(crosstable, "labs.col")
rtn = crosstable
is_tested = rtn %>% names %>% grepl(p,.) %>% any
is_multiple = rtn %>% names %>% grepl(value,.) %>% any %>% `!`
if(is_tested && !show.test.name){
rtn$p = rtn$p %>% gsub(" \\(.*\\)","", .)
}
if(compact && !is(rtn, "compacted")) {
rtn <- compact(rtn)
}
which(rtn$label != lead(rtn$label))
rtn %>%
select(-!!sym(id)) %>%
flextable %>%
hline(i=sep.rows-1, border = border1)
sep.rows
sep.rows <- which(rtn$label != lead(rtn$label)) #$label ou $.id ?
rtn %>%
select(-!!sym(id)) %>%
flextable %>%
hline(i=sep.rows-1, border = border1)
rtn %>%
select(-!!sym(id)) %>%
flextable %>%
hline(i=sep.rows, border = border1)
rtn <- rtn %>%
select(-!!sym(id)) %>%
flextable %>%
hline(i=sep.rows, border = border1)
header_values = if(is_tested) c(label, variable, labs.col, p) else c(label, variable, value)
header_colwidths = if(is_tested) c(1, 1, ncol(crosstable)-4, 1) else c(1, 1, ncol(crosstable)-3)
body_merge = if(is_tested) c("label", p) else c("label")
rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head") %>%
merge_v(j = body_merge)
rtn <- rtn %>%
add_header_row(values=header_values,
colwidths=header_colwidths) %>%
merge_v(j=c(1,2,ncol(crosstable)-1), part = "head") %>%
merge_v(j = body_merge)
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head") %>%
border_inner_h(border = border2, part = "head")
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head")
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head") %>%
border_inner_h(border = border2, part = "head")
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head") %>%
border_inner_h(border = border2, part = "all")
rtn
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head") %>%
hline_bottom(border = border2, part = "head")
rtn %>%
bold(part="head") %>%
align(align = "left", part="all") %>%
align(i=1, align = "center", part="head") %>%
hline_top(border = border2, part = "head") %>%
hline_bottom(border = border2, part = "head") %>%
border_inner_h(border = border2, part = "head")
source('E:/Nextcloud/Programmation/fork_biostat2/R/addCrossTable.r')
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
print(doc, "test_cross_officer.docx")
source('E:/Nextcloud/Programmation/fork_biostat2/tests/testthat/test-tables.R')
source('~/.active-rstudio-document')
plot(x,y)
cor(x,y)
m1 <- lm(y~x)  #A simple regression
plot(m1)
